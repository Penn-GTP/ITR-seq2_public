#!/usr/bin/env perl
# This script is ued to get GTYPE summary from BEDdetail files which are generated by `bedtool intersect -wao` commands
use strict;
use warnings;

my $usage = "Usage: $0 INFILE OUTFILE [NON-OVERLAP-TYPE(intergenic)]";
my $infile = shift or die $usage;
my $outfile = shift or die $usage;
my $nontype = shift || "intergenic";

open(IN, "<$infile") || die "Unable to open $infile: $!";
open(OUT, ">$outfile") || die "Unable to write to $outfile: $!";

# read count and clone of each overlap
my %gtype2overlap;
my %total2overlap;
while(my $line = <IN>) {
	chomp $line;
	my @fields = split(/\t/, $line);
	my ($chr, $start, $end, $name) = @fields;
	my $id = "$chr:$start:$end:$name";
	my ($src, $type, $over_start, $over_end, $score, $strand, $phase, $attrs, $overlap) = @fields[($#fields - 8)..$#fields]; # get the trailing fields
	next unless($start > 0 && $end > 0); # ignore unmapped hits
	if($overlap > 0) {
		$gtype2overlap{$type}{$id} += $overlap;
	}
	else { # non-overlap
		$gtype2overlap{$nontype}{$id} += $end - $start + 1;
	}
# record total number
	$total2overlap{$id} += $overlap;
}

# output
print OUT "gtype\tcount\toverlap\n";
foreach my $type (sort keys %gtype2overlap) {
	my ($count, $overlap) = (0, 0);
	while(my ($id, $len) = each %{$gtype2overlap{$type}}) {
		$count++;
		$overlap += $len;
	}
	print OUT "$type\t$count\t$overlap\n";
}
# print total overlap
my ($count, $overlap) = (0, 0);
while(my ($id, $len) = each %total2overlap) {
	$count++;
	$overlap += $len;
}
print OUT "total\t$count\t$overlap\n";

close(IN);
close(OUT);
